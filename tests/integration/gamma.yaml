einsum:
  declaration:
    A: [K, M]
    B: [K, N]
    T: [K, M, N]
    Z: [M, N]

  expressions:
    - T[k,m,n] = take(A[k,m], B[k,n], 1)
    - Z[m,n] = T[k,m,n] * A[k,m]

mapping:
  rank-order:
    A: [M, K]
    B: [K, N]
    T: [M, K, N]
    Z: [M, N]

  loop-order:
    T: [M, K, N]
    Z: [M, N, K]

architecture:
  subtree:
  - name: System
    attributes:
      clock_frequency: 1000000000

    local:
    - name: MainMemory
      class: DRAM
      attributes:
        # 128 GB/s = 128 * 2^30 * 8
        bandwidth: 1099511627776

    subtree:
    - name: Chip

      local:
      - name: FiberCache # 3MB FiberCache
        class: Cache
        attributes:
          width: 8
          depth: 3145728

      subtree:
      - name: PE[0..31] # 32 PEs

        subtree:
        - name: Stage0

          local:
          - name: RegFile0
            class: Buffet

          - name: Intersection
            class: LeaderFollower

        - name: Stage0to1

          local:
          - name: HighRadixMerger
            class: Merger
            attributes:
              radix: 64
              next_latency: 1

        - name: Stage1

          local:
          - name: RegFile1
            class: Buffet

          - name: MAC
            class: compute
bindings:
- name: MainMemory
  bindings:
  - tensor: A
    rank: root
  - tensor: B
    rank: root
  - tensor: Z
    rank: root

- name: FiberCache
  bindings:
  - tensor: B
    rank: K

- name: RegFile0
  bindings:
  - tensor: A
    rank: M
  - tensor: B
    rank: N
  - tensor: T
    rank: M

- name: Intersection
  bindings:
  - einsum: T
    rank: K
    leader: A

- name: HighRadixMerger
  bindings:
  # T[M, K, N] -> T[M, N, K]
  - tensor: T
    init_ranks: [M, K, N]
    swap_depth: 1

- name: RegFile1
  bindings:
  - tensor: A
    rank: M
  - tensor: T
    rank: M
  - tensor: Z
    rank: N

- name: MAC
  bindings:
  - einsum: Z
    op: mul
  - einsum: Z
    op: add

format:
  A:
    M:
      format: U
      rhbits: 32
      pbits: 32
    K:
      format: C
      cbits: 32
      pbits: 64

  B:
    K:
      format: U
      rhbits: 32
      pbits: 32
    N:
      format: C
      cbits: 32
      pbits: 64

  Z:
    M:
      format: U
      rhbits: 32
      pbits: 32
    N:
      format: C
      cbits: 32
      pbits: 64
